/**
 * @notice - HTTP data of OKX DEX API (https://web3.okx.com/build/dev-docs/dex-api/) for testing purpose.
 */

use crate::tests::{
    test_http_data_generator_for_dex_api_response_header_and_body::{
        response_header_plain_test,
        response_body_plain_test
    }
};



/**
 * @notice - API response (header + body) in bytes format.
 */
pub fn response() -> [u8; 4185] {
    let response_header_plain_text = response_header_plain_test();
    let response_header_bytes = response_header_plain_text.as_bytes().map(|x: u8| x);

    let response_body_plain_text = response_body_plain_test();
    let response_body_bytes = response_body_plain_text.as_bytes().map(|x: u8| x);

    let response_bytes = response_header_bytes.concat(response_body_bytes);

    println(f"Response (header + body in bytes): {response_bytes}\n");

    response_bytes
}




// {
//     \"date\": \"Thu, 10 Jul 2025 03:34:36 GMT\",
//     \"content-type\": \"application/json;charset=UTF-8\",
//     \"transfer-encoding\": \"chunked\",
//     \"connection\": \"keep-alive\",
//     \"vary\": \"Accept-Encoding\",
//     \"set-cookie\": [
//         \"locale=en-US; Max-Age=604800; Expires=Thu, 17-Jul-2025 03:34:36 GMT; Path=/\",
//         \"__cf_bm=nOLEpRAqS08Ck_p20ZOR_om74A_U6NdMzeXyPjuRDCY-1752118476-1.0.1.1-9GL3gnxhdlVxAsHLxGpZH9B3hJilGJOCwnX9gy_ct0BVvEggqwlwbRhTIpQWjL5tHp4JmnT6WdHuKEPrnCK7OeosGDWCH5TtEbG6h8i1rPU; path=/; expires=Thu, 10-Jul-25 04:04:36 GMT; domain=.okx.com; HttpOnly; Secure; SameSite=None\"
//     ],
//     \"b-locale\": \"en_US\",
//     \"content-security-policy\": \"frame-ancestors 'self'\",
//     \"access-control-allow-origin\": \"*\",
//     \"x-brokerid\": \"0\",
//     \"strict-transport-security\": \"max-age=31536000; includeSubDomains\",
//     \"x-xss-protection\": \"1; mode=block\",
//     \"x-frame-options\": \"DENY\",
//     \"x-content-type-options\": \"nosniff\",
//     \"cf-cache-status\": \"DYNAMIC\",
//     \"server\": \"cloudflare\",
//     \"cf-ray\": \"95cd019c3ad57822-NRT\"
// }
pub fn header() -> [u8; 1112] {
    let response_header_plain_text = response_header_plain_test();
    let response_header_bytes = response_header_plain_text.as_bytes().map(|x: u8| x);
    println(f"Response Header (in bytes): {response_header_bytes}\n");  // @dev - [Result]: Successful to convert the API response header from string to bytes ([u8; N])

    // @dev - Returning the API response header in bytes
    response_header_bytes
}

// @dev - [Log]: API response header in bytes format (response_header_bytes) above:
//
// [
//   123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 100, 97, 116, 101, 34, 58, 32, 34, 
//   ...
//   99, 51, 97, 100, 53, 55, 56, 50, 50, 45, 78, 82, 84, 34, 10, 32, 32, 32, 32, 125
// ];




// [34, 100, 97, 116, 101, 34, 58, 32, 34, 84, 104, 117, 44, 32, 49, 48, 32, 74, 117, 108, 32, 50, 48, 50, 53, 32, 48, 51, 58, 51, 52, 58, 51, 54, 32, 71, 77, 84, 34]
pub fn start_line() -> [Field; 39] {
    let start_line_in_field = "\"date\": \"Thu, 10 Jul 2025 03:34:36 GMT\"".as_bytes().map(|x| x as Field);
    println(f"start_line (in Field): {start_line_in_field}\n");
    start_line_in_field
}

// [34, 99, 111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 34, 58, 32, 34, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 106, 115, 111, 110, 59, 99, 104, 97, 114, 115, 101, 116, 61, 85, 84, 70, 45, 56, 34]
pub fn header_0() -> [Field; 48] {
    let header_0_in_field = "\"content-type\": \"application/json;charset=UTF-8\"".as_bytes().map(|x| x as Field);
    println(f"header_0 (in Field): {header_0_in_field}\n");
    header_0_in_field
}

// [34, 99, 111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 34, 58, 32, 34, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 106, 115, 111, 110, 59, 99, 104, 97, 114, 115, 101, 116, 61, 85, 84, 70, 45, 56, 34]
pub fn header_1() -> [Field; 30] {
    let header_1_in_field = "\"transfer-encoding\": \"chunked\"".as_bytes().map(|x| x as Field);
    println(f"header_1 (in Field): {header_1_in_field}\n");
    header_1_in_field
}

// [34, 116, 114, 97, 110, 115, 102, 101, 114, 45, 101, 110, 99, 111, 100, 105, 110, 103, 34, 58, 32, 34, 99, 104, 117, 110, 107, 101, 100, 34]
pub fn header_2() -> [Field; 26] {
    let header_2_in_field = "\"connection\": \"keep-alive\"".as_bytes().map(|x| x as Field);
    println(f"header_2 (in Field): {header_2_in_field}\n");
    header_2_in_field
}

// [83, 101, 114, 118, 101, 114, 58, 32, 87, 111, 114, 107, 100, 97, 121]
pub fn header_3() -> [Field; 25] {
    let header_3_in_field = "\"vary\": \"Accept-Encoding\"".as_bytes().map(|x| x as Field);
    println(f"header_3 (in Field): {header_3_in_field}\n");
    header_3_in_field
}



// {
//     \"chainId\": \"8453\",
//     \"chainIndex\": \"8453\",
//     \"contextSlot\": 0,
//     \"dexRouterList\": [
//         {
//         \"router\": \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE--0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913\",
//         \"routerPercent\": \"100\",
//         \"subRouterList\": [
//             {
//             \"dexProtocol\": [
//                 {
//                 \"dexName\": \"Uniswap V3\",
//                 \"percent\": \"100\"
//                 }
//             ],
//             \"fromToken\": {
//                 \"decimal\": \"18\",
//                 \"isHoneyPot\": false,
//                 \"taxRate\": \"0\",
//                 \"tokenContractAddress\": \"0x4200000000000000000000000000000000000006\",
//                 \"tokenSymbol\": \"WETH\",
//                 \"tokenUnitPrice\": \"2774.857698511993422849\"
//             },
//             \"toToken\": {
//                 \"decimal\": \"6\",
//                 \"isHoneyPot\": false,
//                 \"taxRate\": \"0\",
//                 \"tokenContractAddress\": \"0x833589fcd6edb6e08f4c7c32d4f71b54bda02913\",
//                 \"tokenSymbol\": \"USDC\",
//                 \"tokenUnitPrice\": \"1.00004407486844178\"
//             }
//             }
//         ]
//         }
//     ],
//     \"estimateGasFee\": \"135000\",
//     \"fromToken\": {
//         \"decimal\": \"18\",
//         \"isHoneyPot\": false,
//         \"taxRate\": \"0\",
//         \"tokenContractAddress\": \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",
//         \"tokenSymbol\": \"BASE_ETH\",
//         \"tokenUnitPrice\": \"2774.857698511993422849\"
//     },
//     \"fromTokenAmount\": \"500000000000000\",
//     \"priceImpactPercentage\": \"0.01\",
//     \"quoteCompareList\": [
//         {
//         \"amountOut\": \"1.387474\",
//         \"dexLogo\": \"https://static.okx.com/cdn/wallet/logo/UNI.png\",
//         \"dexName\": \"Uniswap V3\",
//         \"tradeFee\": \"0.00139188672804195\"
//         },
//         {
//         \"amountOut\": \"1.387256\",
//         \"dexLogo\": \"https://static.okx.com/cdn/wallet/logo/Dex_BaseSwap.png\",
//         \"dexName\": \"BaseSwap V3\",
//         \"tradeFee\": \"0.00197957223543744\"
//         },
//         {
//         \"amountOut\": \"1.386399\",
//         \"dexLogo\": \"https://static.okx.com/cdn/explorer/dex/logo/solidly.png\",
//         \"dexName\": \"Solidly V3\",
//         \"tradeFee\": \"0.00197957223543744\"
//         },
//         {
//         \"amountOut\": \"1.386382\",
//         \"dexLogo\": \"https://static.okx.com/cdn/explorer/dex/logo/Dex_Aerodrome.png\",
//         \"dexName\": \"AerodromeSlipstream\",
//         \"tradeFee\": \"0.00197957223543744\"
//         }
//     ],
//     \"swapMode\": \"exactIn\",
//     \"toToken\": {
//         \"decimal\": \"6\",
//         \"isHoneyPot\": false,
//         \"taxRate\": \"0\",
//         \"tokenContractAddress\": \"0x833589fcd6edb6e08f4c7c32d4f71b54bda02913\",
//         \"tokenSymbol\": \"USDC\",
//         \"tokenUnitPrice\": \"1.00004407486844178\"
//     },
//     \"toTokenAmount\": \"1387474\",
//     \"tradeFee\": \"0.00139188672804195\"
// }
pub fn body() -> [u8; 3073] {
    let response_body_plain_text = response_body_plain_test();
    let response_body_bytes = response_body_plain_text.as_bytes().map(|x: u8| x);
    println(f"Response Body (in bytes): {response_body_bytes}\n");  // @dev - [Result]: Successful to convert the response from string to bytes ([u8; N])

    response_body_bytes

    // @dev - [Log]: The response body in bytes format (response_body_bytes) is like this:
    // [123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 99, 104, 97, 105, 110, 73, 100, 34, 58, 32, 34, 56, 52, 53, 51, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 99, 104, 97, 105, 110, 73, 110, 100, 101, 120, 34, 58, 32, 34, 56, 52, 53, 51, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 99, 111, 110, 116, 101, 120, 116, 83, 108, 111, 116, 34, 58, 32, 48, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 100, 101, 120, 82, 111, 117, 116, 101, 114, 76, 105, 115, 116, 34, 58, 32, 91, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 114, 111, 117, 116, 101, 114, 34, 58, 32, 34, 48, 120, 69, 101, 101, 101, 101, 69, 101, 101, 101, 69, 101, 69, 101, 101, 69, 101, 69, 101, 69, 101, 101, 69, 69, 69, 101, 101, 101, 101, 69, 101, 101, 101, 101, 101, 101, 101, 69, 69, 101, 69, 45, 45, 48, 120, 56, 51, 51, 53, 56, 57, 102, 67, 68, 54, 101, 68, 98, 54, 69, 48, 56, 102, 52, 99, 55, 67, 51, 50, 68, 52, 102, 55, 49, 98, 53, 52, 98, 100, 65, 48, 50, 57, 49, 51, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 114, 111, 117, 116, 101, 114, 80, 101, 114, 99, 101, 110, 116, 34, 58, 32, 34, 49, 48, 48, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 115, 117, 98, 82, 111, 117, 116, 101, 114, 76, 105, 115, 116, 34, 58, 32, 91, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 100, 101, 120, 80, 114, 111, 116, 111, 99, 111, 108, 34, 58, 32, 91, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 100, 101, 120, 78, 97, 109, 101, 34, 58, 32, 34, 85, 110, 105, 115, 119, 97, 112, 32, 86, 51, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 112, 101, 114, 99, 101, 110, 116, 34, 58, 32, 34, 49, 48, 48, 34, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 93, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 102, 114, 111, 109, 84, 111, 107, 101, 110, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 100, 101, 99, 105, 109, 97, 108, 34, 58, 32, 34, 49, 56, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 105, 115, 72, 111, 110, 101, 121, 80, 111, 116, 34, 58, 32, 102, 97, 108, 115, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 116, 97, 120, 82, 97, 116, 101, 34, 58, 32, 34, 48, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 116, 111, 107, 101, 110, 67, 111, 110, 116, 114, 97, 99, 116, 65, 100, 100, 114, 101, 115, 115, 34, 58, 32, 34, 48, 120, 52, 50, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 54, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 116, 111, 107, 101, 110, 83, 121, 109, 98, 111, 108, 34, 58, 32, 34, 87, 69, 84, 72, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 116, 111, 107, 101, 110, 85, 110, 105, 116, 80, 114, 105, 99, 101, 34, 58, 32, 34, 50, 55, 55, 52, 46, 56, 53, 55, 54, 57, 56, 53, 49, 49, 57, 57, 51, 52, 50, 50, 56, 52, 57, 34, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 116, 111, 84, 111, 107, 101, 110, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 100, 101, 99, 105, 109, 97, 108, 34, 58, 32, 34, 54, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 105, 115, 72, 111, 110, 101, 121, 80, 111, 116, 34, 58, 32, 102, 97, 108, 115, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 116, 97, 120, 82, 97, 116, 101, 34, 58, 32, 34, 48, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 116, 111, 107, 101, 110, 67, 111, 110, 116, 114, 97, 99, 116, 65, 100, 100, 114, 101, 115, 115, 34, 58, 32, 34, 48, 120, 56, 51, 51, 53, 56, 57, 102, 99, 100, 54, 101, 100, 98, 54, 101, 48, 56, 102, 52, 99, 55, 99, 51, 50, 100, 52, 102, 55, 49, 98, 53, 52, 98, 100, 97, 48, 50, 57, 49, 51, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 116, 111, 107, 101, 110, 83, 121, 109, 98, 111, 108, 34, 58, 32, 34, 85, 83, 68, 67, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 116, 111, 107, 101, 110, 85, 110, 105, 116, 80, 114, 105, 99, 101, 34, 58, 32, 34, 49, 46, 48, 48, 48, 48, 52, 52, 48, 55, 52, 56, 54, 56, 52, 52, 49, 55, 56, 34, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 93, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 93, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 101, 115, 116, 105, 109, 97, 116, 101, 71, 97, 115, 70, 101, 101, 34, 58, 32, 34, 49, 51, 53, 48, 48, 48, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 102, 114, 111, 109, 84, 111, 107, 101, 110, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 100, 101, 99, 105, 109, 97, 108, 34, 58, 32, 34, 49, 56, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 105, 115, 72, 111, 110, 101, 121, 80, 111, 116, 34, 58, 32, 102, 97, 108, 115, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 116, 97, 120, 82, 97, 116, 101, 34, 58, 32, 34, 48, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 116, 111, 107, 101, 110, 67, 111, 110, 116, 114, 97, 99, 116, 65, 100, 100, 114, 101, 115, 115, 34, 58, 32, 34, 48, 120, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 116, 111, 107, 101, 110, 83, 121, 109, 98, 111, 108, 34, 58, 32, 34, 66, 65, 83, 69, 95, 69, 84, 72, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 116, 111, 107, 101, 110, 85, 110, 105, 116, 80, 114, 105, 99, 101, 34, 58, 32, 34, 50, 55, 55, 52, 46, 56, 53, 55, 54, 57, 56, 53, 49, 49, 57, 57, 51, 52, 50, 50, 56, 52, 57, 34, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 102, 114, 111, 109, 84, 111, 107, 101, 110, 65, 109, 111, 117, 110, 116, 34, 58, 32, 34, 53, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 112, 114, 105, 99, 101, 73, 109, 112, 97, 99, 116, 80, 101, 114, 99, 101, 110, 116, 97, 103, 101, 34, 58, 32, 34, 48, 46, 48, 49, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 113, 117, 111, 116, 101, 67, 111, 109, 112, 97, 114, 101, 76, 105, 115, 116, 34, 58, 32, 91, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 97, 109, 111, 117, 110, 116, 79, 117, 116, 34, 58, 32, 34, 49, 46, 51, 56, 55, 52, 55, 52, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 100, 101, 120, 76, 111, 103, 111, 34, 58, 32, 34, 104, 116, 116, 112, 115, 58, 47, 47, 115, 116, 97, 116, 105, 99, 46, 111, 107, 120, 46, 99, 111, 109, 47, 99, 100, 110, 47, 119, 97, 108, 108, 101, 116, 47, 108, 111, 103, 111, 47, 85, 78, 73, 46, 112, 110, 103, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 100, 101, 120, 78, 97, 109, 101, 34, 58, 32, 34, 85, 110, 105, 115, 119, 97, 112, 32, 86, 51, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 116, 114, 97, 100, 101, 70, 101, 101, 34, 58, 32, 34, 48, 46, 48, 48, 49, 51, 57, 49, 56, 56, 54, 55, 50, 56, 48, 52, 49, 57, 53, 34, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 97, 109, 111, 117, 110, 116, 79, 117, 116, 34, 58, 32, 34, 49, 46, 51, 56, 55, 50, 53, 54, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 100, 101, 120, 76, 111, 103, 111, 34, 58, 32, 34, 104, 116, 116, 112, 115, 58, 47, 47, 115, 116, 97, 116, 105, 99, 46, 111, 107, 120, 46, 99, 111, 109, 47, 99, 100, 110, 47, 119, 97, 108, 108, 101, 116, 47, 108, 111, 103, 111, 47, 68, 101, 120, 95, 66, 97, 115, 101, 83, 119, 97, 112, 46, 112, 110, 103, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 100, 101, 120, 78, 97, 109, 101, 34, 58, 32, 34, 66, 97, 115, 101, 83, 119, 97, 112, 32, 86, 51, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 116, 114, 97, 100, 101, 70, 101, 101, 34, 58, 32, 34, 48, 46, 48, 48, 49, 57, 55, 57, 53, 55, 50, 50, 51, 53, 52, 51, 55, 52, 52, 34, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 97, 109, 111, 117, 110, 116, 79, 117, 116, 34, 58, 32, 34, 49, 46, 51, 56, 54, 51, 57, 57, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 100, 101, 120, 76, 111, 103, 111, 34, 58, 32, 34, 104, 116, 116, 112, 115, 58, 47, 47, 115, 116, 97, 116, 105, 99, 46, 111, 107, 120, 46, 99, 111, 109, 47, 99, 100, 110, 47, 101, 120, 112, 108, 111, 114, 101, 114, 47, 100, 101, 120, 47, 108, 111, 103, 111, 47, 115, 111, 108, 105, 100, 108, 121, 46, 112, 110, 103, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 100, 101, 120, 78, 97, 109, 101, 34, 58, 32, 34, 83, 111, 108, 105, 100, 108, 121, 32, 86, 51, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 116, 114, 97, 100, 101, 70, 101, 101, 34, 58, 32, 34, 48, 46, 48, 48, 49, 57, 55, 57, 53, 55, 50, 50, 51, 53, 52, 51, 55, 52, 52, 34, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 97, 109, 111, 117, 110, 116, 79, 117, 116, 34, 58, 32, 34, 49, 46, 51, 56, 54, 51, 56, 50, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 100, 101, 120, 76, 111, 103, 111, 34, 58, 32, 34, 104, 116, 116, 112, 115, 58, 47, 47, 115, 116, 97, 116, 105, 99, 46, 111, 107, 120, 46, 99, 111, 109, 47, 99, 100, 110, 47, 101, 120, 112, 108, 111, 114, 101, 114, 47, 100, 101, 120, 47, 108, 111, 103, 111, 47, 68, 101, 120, 95, 65, 101, 114, 111, 100, 114, 111, 109, 101, 46, 112, 110, 103, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 100, 101, 120, 78, 97, 109, 101, 34, 58, 32, 34, 65, 101, 114, 111, 100, 114, 111, 109, 101, 83, 108, 105, 112, 115, 116, 114, 101, 97, 109, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 116, 114, 97, 100, 101, 70, 101, 101, 34, 58, 32, 34, 48, 46, 48, 48, 49, 57, 55, 57, 53, 55, 50, 50, 51, 53, 52, 51, 55, 52, 52, 34, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 32, 93, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 115, 119, 97, 112, 77, 111, 100, 101, 34, 58, 32, 34, 101, 120, 97, 99, 116, 73, 110, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 116, 111, 84, 111, 107, 101, 110, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 100, 101, 99, 105, 109, 97, 108, 34, 58, 32, 34, 54, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 105, 115, 72, 111, 110, 101, 121, 80, 111, 116, 34, 58, 32, 102, 97, 108, 115, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 116, 97, 120, 82, 97, 116, 101, 34, 58, 32, 34, 48, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 116, 111, 107, 101, 110, 67, 111, 110, 116, 114, 97, 99, 116, 65, 100, 100, 114, 101, 115, 115, 34, 58, 32, 34, 48, 120, 56, 51, 51, 53, 56, 57, 102, 99, 100, 54, 101, 100, 98, 54, 101, 48, 56, 102, 52, 99, 55, 99, 51, 50, 100, 52, 102, 55, 49, 98, 53, 52, 98, 100, 97, 48, 50, 57, 49, 51, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 116, 111, 107, 101, 110, 83, 121, 109, 98, 111, 108, 34, 58, 32, 34, 85, 83, 68, 67, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 116, 111, 107, 101, 110, 85, 110, 105, 116, 80, 114, 105, 99, 101, 34, 58, 32, 34, 49, 46, 48, 48, 48, 48, 52, 52, 48, 55, 52, 56, 54, 56, 52, 52, 49, 55, 56, 34, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 116, 111, 84, 111, 107, 101, 110, 65, 109, 111, 117, 110, 116, 34, 58, 32, 34, 49, 51, 56, 55, 52, 55, 52, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 116, 114, 97, 100, 101, 70, 101, 101, 34, 58, 32, 34, 48, 46, 48, 48, 49, 51, 57, 49, 56, 56, 54, 55, 50, 56, 48, 52, 49, 57, 53, 34, 10, 32, 32, 32, 32, 125]
}